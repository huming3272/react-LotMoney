{"version":3,"sources":["icons sync /.svg$","icons/chart.svg","icons/left.svg","icons/money.svg","icons/right.svg","icons/tag.svg","components/Icon.tsx","components/Nav.tsx","components/Layout.tsx","lib/createId.tsx","hooks/useUpdate.tsx","hooks/useTags.tsx","views/Money/TagsSection.tsx","components/Input.tsx","views/Money/NotesSection.tsx","views/Money/CategorySection.tsx","views/Money/NumberPadSection/Wrapper.tsx","views/Money/NumberPadSection.tsx","views/Money/NumberPadSection/generateOutput.tsx","hooks/useRecords.tsx","views/Money.tsx","views/Statistics.tsx","components/Button.tsx","components/Center.tsx","components/Space.tsx","views/Tags.tsx","views/Tag.tsx","views/NoMatch.tsx","App.tsx","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","symbol","add","requireContext","require","forEach","error","console","log","Icon","styled","svg","IconWrapper","props","name","children","className","rest","cs","xlinkHref","NavWrapper","nav","Nav","activeClassName","to","Wrapper","div","Main","Layout","parseInt","window","localStorage","getItem","createId","setItem","JSON","stringify","useUpdate","fn","deps","count","useRef","useEffect","current","memoizedFn","useCallback","useTags","React","useState","tags","setTags","localTags","parse","length","getName","tag","filter","t","addTag","tagName","prompt","findTag","updateTag","findTagIndex","result","i","deleteTag","section","TagsSection","selectedTagIds","value","key","tagId","indexOf","onClick","onChange","onToggleTag","Label","label","Input","NotesSection","note","type","target","placeholder","CategorySection","categoryMap","categoryList","category","cate","NumberPadSection","padStr","setPadStr","countStr","randomNum","String","Math","floor","random","push","splice","zeroPosition","ele","index","group","padGenerator","output","onClickButtonWrapper","currentButton","textContent","amount","text","numPad","stringOutput","dotIndex","floatLimit","slice","lengthLimit","numMap","generateOutput","onOK","dangerouslySetInnerHTML","__html","useRecords","records","setRecords","addRecord","newRecord","alert","tagIds","record","createAt","Date","toISOString","MyLayout","defaultFormData","CategoryWrapper","Money","selected","setSelected","obj","Item","Header","h3","Statistics","setCategory","selectedRecords","r","hash","day","format","array","entries","sort","a","b","date","Button","button","Center","Space","Tags","TagList","ol","Topbar","header","InputWrapper","Tag","idString","useParams","history","useHistory","goBack","tagContent","NoMatch","AppWrapper","App","document","querySelector","setAttribute","exact","path","from","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.10c8d776.chunk.js","sourcesContent":["var map = {\n\t\"./chart.svg\": 40,\n\t\"./left.svg\": 41,\n\t\"./money.svg\": 42,\n\t\"./right.svg\": 43,\n\t\"./tag.svg\": 44\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 39;","import SpriteSymbol from \"../../node_modules/svg-baker-runtime/browser-symbol.js\";\nimport sprite from \"../../node_modules/svg-sprite-loader/runtime/browser-sprite.build.js\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"chart\",\n  \"use\": \"chart-usage\",\n  \"viewBox\": \"0 0 1024 1024\",\n  \"content\": \"<symbol class=\\\"icon\\\" viewBox=\\\"0 0 1024 1024\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"chart\\\"><path d=\\\"M875.52 151.552h-2.048C802.816 80.896 709.12 37.888 609.28 31.232v399.36H998.4c-4.096-104.96-48.128-204.8-122.88-279.04z\\\" /><path d=\\\"M537.6 39.424h-29.184c-264.192 0-478.72 214.016-478.72 478.208 0 264.704 214.528 478.72 478.72 478.72 261.632 1.024 475.136-208.896 478.72-470.528V496.64H537.6V39.424zm389.12 518.144c-8.704 99.84-52.736 194.048-124.928 264.192h-2.048c-77.824 76.288-182.272 118.784-291.328 118.784-232.448 0-420.352-187.904-420.352-420.352C86.528 299.008 258.048 114.176 479.232 99.84v457.728H926.72z\\\" /></symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"../../node_modules/svg-baker-runtime/browser-symbol.js\";\nimport sprite from \"../../node_modules/svg-sprite-loader/runtime/browser-sprite.build.js\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"left\",\n  \"use\": \"left-usage\",\n  \"viewBox\": \"0 0 1024 1024\",\n  \"content\": \"<symbol class=\\\"icon\\\" viewBox=\\\"0 0 1024 1024\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"left\\\"><defs><style></style></defs><path d=\\\"M723.413 895.701a44.203 44.203 0 01-27.392-9.6L272.213 545.195a43.733 43.733 0 010-68.267L694.23 138.027a43.733 43.733 0 0154.699 68.266L369.323 511.104l381.525 306.901a43.648 43.648 0 01-27.392 77.696z\\\" /></symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"../../node_modules/svg-baker-runtime/browser-symbol.js\";\nimport sprite from \"../../node_modules/svg-sprite-loader/runtime/browser-sprite.build.js\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"money\",\n  \"use\": \"money-usage\",\n  \"viewBox\": \"0 0 1024 1024\",\n  \"content\": \"<symbol class=\\\"icon\\\" viewBox=\\\"0 0 1024 1024\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"money\\\"><path d=\\\"M741.939 95.754H325.955c-131.539 0-157.866 30.505-157.985 155.152 4.099-.146 4.099.608 4.099.608h-3.466c-34.467 0-44.053 28.16-44.053 62.877 0 34.724 9.586 62.874 44.053 62.874l-.231-1.043v87.646l.231-5.419c-34.467 0-44.053 28.151-44.053 62.867 0 34.733 9.586 62.877 44.053 62.877l-.231-6.385v96.411l.231-8.834c-34.467 0-44.053 28.144-44.053 62.858 0 34.733 2.26 70.631 36.728 70.631l6.445-.068c.933 109.403 25.781 129.585 158.233 129.585H741.94c115.763 0 153.895-27.271 153.895-136.519V250.759c0-132.162-34.573-155.007-153.895-155.007zm-65.223 464.524c22.632 0 34.427 12.154 35.478 35.059 1.053 22.938-10.835 37.147-38.995 37.043-16.098-.034-92.892-1.985-92.892-1.985v78.881c0 22.923-21.73 26.91-44.509 26.91-22.774 0-43.138-3.987-43.138-26.91v-78.881h-96.409c-22.586 0-35.059-12.137-35.059-35.059 0-15.236-.298-5.153-.205-6.283 1.739-21.329 13.781-28.776 35.264-28.776h96.41v-52.588h-96.41c-16.597 0-32.969-3.989-32.969-41.88 0-22.929 13.943-37 36.728-37h73.452l-50.122-46.383-23.419-23.588c-15.185-15.296-15.526-39.304-2.038-55.61.805-.976 1.139-2.191 2.038-3.115 16.109-16.212 42.197-16.212 58.305 0l3.074 3.115 75.003 75.527 78.069-78.642c16.108-16.212 42.188-16.212 58.287 0 16.1 16.21 16.1 42.522 0 58.725l-70.648 69.971h73.456c22.775 0 36.727 14.071 36.727 37 0 22.93-12.702 41.88-35.478 41.88h-96.41v52.588h96.41z\\\" /></symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"../../node_modules/svg-baker-runtime/browser-symbol.js\";\nimport sprite from \"../../node_modules/svg-sprite-loader/runtime/browser-sprite.build.js\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"right\",\n  \"use\": \"right-usage\",\n  \"viewBox\": \"0 0 1024 1024\",\n  \"content\": \"<symbol class=\\\"icon\\\" viewBox=\\\"0 0 1024 1024\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"right\\\"><defs><style></style></defs><path d=\\\"M743.053 511.857l-40.18-40.204-.171.17L321.126 90.218l-40.18 40.18L662.527 512l-381.58 381.607 40.18 40.175 421.926-421.926zm0 0z\\\" /></symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import SpriteSymbol from \"../../node_modules/svg-baker-runtime/browser-symbol.js\";\nimport sprite from \"../../node_modules/svg-sprite-loader/runtime/browser-sprite.build.js\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"tag\",\n  \"use\": \"tag-usage\",\n  \"viewBox\": \"0 0 1024 1024\",\n  \"content\": \"<symbol class=\\\"icon\\\" viewBox=\\\"0 0 1024 1024\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"tag\\\"><path d=\\\"M154.432 521.216l-25.92-199.424a59.584 59.584 0 0168.288-66.624l193.92 30.208c12.544 1.92 24.064 7.808 33.024 16.768L747.2 625.6a59.584 59.584 0 010 84.352L578.624 878.528a59.584 59.584 0 01-84.352 0l-322.88-322.88a59.584 59.584 0 01-16.96-34.432zm146.56-88.96a59.584 59.584 0 10-84.288-84.288 59.584 59.584 0 0084.288 84.352zm-43.328-216.32l-2.688-20.608a59.584 59.584 0 0168.288-66.56l193.92 30.208c12.544 1.92 24.064 7.808 33.024 16.704L873.664 499.2a59.584 59.584 0 010 84.352l-84.288 84.288a59.584 59.584 0 000-84.288L465.92 259.968a59.584 59.584 0 00-32.96-16.704L257.6 215.936z\\\" /></symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport cs from 'classnames'\r\n\r\n// 通过搜索和思考得到的用这个办法，用途是批量从./icons/中引入svg\r\nlet importAll = (requireContext: __WebpackModuleApi.RequireContext) => requireContext.keys().forEach(requireContext);\r\ntry {importAll(require.context('icons', true, /\\.svg$/));} catch (error) {console.log(error);}\r\n\r\n// 声明一个类型\r\ntype Props = {\r\n  //  name类型可能不存在\r\n  name?: string\r\n} & React.SVGAttributes<SVGElement>\r\n// 增加svg属性\r\nconst Icon = styled.svg`\r\n  fill: #333;\r\n`\r\n// 拿到父元素的参数\r\n// const Icon = (props: Props) => {\r\n//   return (\r\n//     <svg className=\"icon\">\r\n//       <use xlinkHref={'#' + props.name}/>\r\n//     </svg>\r\n//   );\r\n// };\r\nconst IconWrapper = (props:Props) =>{\r\n    // 接收父组件props\r\n    const {name, children, className, ...rest} = props\r\n    return(\r\n        <Icon className={cs('icon', className)} {...rest}>\r\n            {/*js中的短路操作，name不存在时就不加载后面的，防止报错*/}\r\n            {props.name &&<use xlinkHref={'#' + props.name}/>}\r\n        </Icon>\r\n    )\r\n}\r\n\r\nexport default IconWrapper;\r\n","import styled from 'styled-components';\r\nimport {NavLink} from 'react-router-dom';\r\nimport React from 'react';\r\nimport Icon from './Icon';\r\n\r\nconst NavWrapper = styled.nav`\r\n  background: white;\r\n  line-height: 24px;\r\n  box-shadow: 0 0 3px rgba(0, 0, 0, 0.25);\r\n\r\n  > ul {\r\n    display: flex;\r\n\r\n    > li {\r\n      width: 33.3333%;\r\n      text-align: center;\r\n      display: flex;\r\n      flex-direction: column;\r\n      padding: 4px 0;\r\n      justify-content: center;\r\n      align-items: center;\r\n\r\n      > a {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n\r\n        &.active {\r\n          .icon {\r\n            fill: #3d9dff !important;\r\n          }\r\n\r\n          background: #2263f3 !important;\r\n          color: #3487ff;\r\n          border-radius: 5px;\r\n        }\r\n      }\r\n\r\n      .icon {\r\n        width: 24px;\r\n        height: 24px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <NavWrapper>\r\n            <ul>\r\n                <li>\r\n                    <NavLink activeClassName=\"active\" to=\"/tags\">\r\n                        <Icon name=\"tag\"/>\r\n                        <span>标签页</span>\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink activeClassName=\"active\" to=\"/money\">\r\n                        <Icon name=\"money\"/>\r\n                        <span>记点啥</span>\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink activeClassName=\"active\" to=\"/statistics\">\r\n                        <Icon name=\"chart\"/>\r\n                        <span>分析</span>\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n        </NavWrapper>\r\n    );\r\n};\r\n\r\nexport default Nav;\r\n","import Nav from './Nav';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100vh;\r\n  display:flex;\r\n  flex-direction: column;\r\n`;\r\nconst Main = styled.div`\r\n  flex-grow: 1;\r\n  overflow: auto;\r\n`;\r\n// 用来布局的组件，从父组件塞入的组件参数撑开页面\r\nconst Layout = (props: any) => {\r\n  return (\r\n    <Wrapper>\r\n        <Main className={props.className}>\r\n        {props.children}\r\n      </Main>\r\n      <Nav/>\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default Layout;\r\n","let id = parseInt(window.localStorage.getItem('idMax') || '0')\r\n// ():number指的是返回值为数字\r\nconst createId = ():number =>{\r\n    id +=1;\r\n    window.localStorage.setItem('idMax', JSON.stringify(id))\r\n    return id;\r\n}\r\nexport {createId}\r\n\r\n// 面向对象的类能更灵活的处理\r\n// class Id {\r\n//     value: number;\r\n//     startFrom10000(){\r\n//         return this.value + 10000\r\n//     }\r\n//     constructor() {\r\n//         id +=1;\r\n//         this.value =id\r\n//     }\r\n// }\r\n// export {id}","// 一个监听值变化的自定义钩子函数\r\nimport {useEffect, useRef, useCallback } from 'react'\r\n// 两个参数分别是操作函数和修改值的钩子\r\nexport const useUpdate = (fn: () => void,deps:any[]) =>{\r\n    const count = useRef(0);\r\n    // 不写第二个参数，那就是刷新一次更新一次\r\n    useEffect(() => {\r\n        count.current +=1;\r\n    });\r\n    //\r\n    const memoizedFn = useCallback(fn, deps)\r\n    useEffect(()=>{\r\n        //因为监听的数值会先赋值操作一次，所以防止混乱，计数的方式运行操作函数\r\n\r\n        if(count.current > 1){\r\n            memoizedFn()\r\n        }\r\n\r\n    //  不可变数据\r\n    },[memoizedFn])\r\n}","import React from \"react\";\r\n\r\nimport {createId} from \"../lib/createId\";\r\nimport {useUpdate} from './useUpdate'\r\n\r\nconst useTags = ()=>{\r\n    // 封装一个自定义 Hook\r\n    const [tags, setTags] = React.useState<{id:number,name:string}[]>([])\r\n    // array.filter会返回符合要求的数组，在此因为只有一个符合的值，所以返回[0]\r\n    //第二个参数不写时，监听一切\r\n    React.useEffect(() => {\r\n        // 获取初值\r\n        let localTags = JSON.parse(window.localStorage.getItem('tags')||'[]')\r\n        // 如果一开始没值,则设置\r\n        if(localTags.length ===0){\r\n            localTags = [\r\n                {id:createId(),name:'穿'},\r\n                {id:createId(),name:'吃'},\r\n                {id:createId(),name:'房'},\r\n                {id:createId(),name:'交通'}\r\n            ]\r\n        }\r\n        setTags(localTags)\r\n    },[])\r\n\r\n    useUpdate(() => {\r\n        window.localStorage.setItem('tags', JSON.stringify(tags))\r\n    },[tags])\r\n\r\n    const findTag = (id:number) => {return tags.filter((tag)=>{return tag.id === id})[0]}\r\n    // 通过遍历后校对每个数组对象\r\n    const findTagIndex = (id:number) =>{\r\n        let result = -1\r\n        for(let i=0; i < tags.length; i++){\r\n            if(tags[i].id === id){\r\n                result = i;\r\n                break;\r\n            }\r\n        }\r\n        return result\r\n    }\r\n    const updateTag = (id: number, {name}:{name: string}) => {\r\n        // react强调不可变数据，所以要用最新数据替换\r\n        setTags(\r\n            tags.map(\r\n                (tag)=>{\r\n                    return tag.id === id?{id,name:name}:tag\r\n                }))\r\n    }\r\n    const deleteTag = (id: number) =>{\r\n        // 反向选择，只返回和删除的id不相符的值，也算是删除\r\n        setTags(tags.filter((tag) => {\r\n            return tag.id !== id\r\n        }))\r\n    }\r\n    const addTag = () => {\r\n        const tagName = window.prompt('新标签的名字为');\r\n        if(tagName !== null && tagName !==''){\r\n            setTags([...tags,{id:createId(),name:tagName}])\r\n        }\r\n    }\r\n    const getName = (id: number) => {\r\n        // 找到符合id的数组子元素，但是id对应一般只有一个，所以取索引0\r\n        const tag = tags.filter((t)=>{return t.id ===id})[0];\r\n        return tag ? tag.name: '';\r\n    }\r\n    return {tags, getName, addTag,setTags, findTag, updateTag, findTagIndex,deleteTag};\r\n}\r\nexport {useTags}","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport {useTags} from '../../hooks/useTags'\r\n\r\nconst Wrapper = styled.section`\r\n  background: #FFFFFF;\r\n  padding: 12px 16px;\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  align-items: flex-start;\r\n  > ol {\r\n    margin: 0 -12px;\r\n    height: calc(100vh - 570px);\r\n    overflow: auto;\r\n    > li {\r\n      background: #8fdef6;\r\n      border-radius: 18px;\r\n      display: inline-block;\r\n      padding: 3px 18px;\r\n      font-size: 14px;\r\n      max-width: 100px;\r\n      margin: 8px 12px;\r\n      white-space: nowrap;\r\n      overflow:hidden;\r\n      text-overflow: ellipsis;\r\n      &.selected {\r\n        background: #46b4ff;\r\n      }\r\n    }\r\n  }\r\n\r\n  > button {\r\n    background: none;\r\n    border: none;\r\n    padding: 2px 4px;\r\n    border-bottom: 1px solid #333;\r\n    color: #666;\r\n    margin-top: 8px;\r\n  }\r\n`\r\n// 定义Props类型,其中onChange是参数为字符串数组和返回值空\r\ntype Props = {\r\n    value: number[];\r\n    onChange: (selected: number[]) => void;\r\n}\r\n// 强化typescript的使用,给定义的函数施加类型限制,用React的函数组件类型\r\nconst TagsSection: React.FunctionComponent<Props> = (props) => {\r\n\r\n    const {tags, addTag} = useTags()\r\n\r\n    // const [selectedTags, setSelectedTags] = React.useState<string[]>([])\r\n    const selectedTagIds = props.value;\r\n    // 选中标签\r\n    const onToggleTag = (tagId: number) => {\r\n            // 通过调用父组件的函数来修改值\r\n            props.onChange(\r\n                [tagId]\r\n            )\r\n\r\n    }\r\n    // 切换按钮选中显示css\r\n    const getClass = (tagId:number)=>{\r\n        return selectedTagIds.indexOf(tagId) >= 0 ?'selected': ''\r\n    }\r\n    return (\r\n        <Wrapper>\r\n            <ol>\r\n                {/*// 为什么不用index作为key,因为产生逆序添加、逆序删除、等破坏数据顺序的行为会引起dom渲染混乱,在顺序时没问题*/}\r\n                {tags.map((tag) => {\r\n                    return (\r\n                        <li key={tag.id} className={getClass(tag.id)}\r\n                            onClick={() => {\r\n                            onToggleTag(tag.id)\r\n                        }}>\r\n                            {tag.name}\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ol>\r\n            <button onClick={()=>{\r\n                addTag()\r\n            }}>新增标签</button>\r\n        </Wrapper>\r\n    )\r\n}\r\nexport {TagsSection}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Label = styled.label`\r\n    display:flex;\r\n    align-items: center;\r\n    > span { margin-right: 16px; white-space: nowrap; }\r\n    > input {\r\n      display:block;\r\n      width: 100%;\r\n      height: 72px;\r\n      background: none;\r\n      border: none;\r\n    }\r\n`;\r\n// Props的label类型是字符串并且是input元素\r\ntype Props = {\r\n    label: string;\r\n} & React.InputHTMLAttributes<HTMLInputElement>;\r\nconst Input: React.FC<Props> = (props) =>{\r\n    // 获取label元素和默认props的children属性，以及其余属性均赋值给rest\r\n    const {label, children, ...rest} = props;\r\n    return (\r\n        <Label>\r\n            <span>{props.label}</span>\r\n            {/*{...rest}等价于 type='text' value='' onChange=()=>{}*/}\r\n            <input {...rest}/>\r\n        </Label>\r\n    )\r\n}\r\nexport {Input}","import styled from \"styled-components\";\r\nimport React, {FunctionComponent,ChangeEventHandler} from \"react\";\r\nimport {Input} from '../../components/Input'\r\n\r\nconst Wrapper = styled.section`\r\n  background: #3d9dff;\r\n  padding: 0 16px;\r\n  font-size: 14px;\r\n\r\n  > label {\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    > span {\r\n      margin-right: 16px;\r\n      white-space: nowrap;\r\n    }\r\n\r\n    > input {\r\n      display: block;\r\n      width: 100%;\r\n      height: 72px;\r\n      background: none;\r\n      border: none;\r\n    }\r\n  }`\r\ntype Props = {\r\n    value: string,\r\n    onChange: (note: string)=> void\r\n}\r\n// 这里的<Props>是参数\r\nconst NotesSection:FunctionComponent<Props> = (props) => {\r\n    // const [note,setNote] = React.useState('')\r\n    // 增加类型名为React的事件改变HTML元素\r\n    const note = props.value\r\n    // input输入改变时的onChange事件，先于Input的渲染函数触发\r\n    const onChange: ChangeEventHandler<HTMLInputElement> = (e)=>{\r\n        props.onChange((e.target.value))\r\n    }\r\n    return (\r\n        <Wrapper>\r\n            <label>\r\n                {/* 受控组件写法value={note} onChange={(e)=>{\r\n                change(e)*/}\r\n                {/*类似vue input的v-model.lazy指令*/}\r\n                {/*<input type=\"text\" ref={refInput} placeholder=\"在这里添加备注\" defaultValue={note} onBlur={(e)=>{blur()}}/>*/}\r\n                <Input label=\"备注\" type=\"text\"\r\n                       value = {note} onChange={onChange}\r\n                       placeholder=\"请填写备注\"/>\r\n            </label>\r\n        </Wrapper>\r\n    )\r\n}\r\nexport {NotesSection}","import styled from \"styled-components\";\r\nimport React from \"react\";\r\n\r\nconst Wrapper = styled.section`\r\n  font-size: 24px;\r\n  > ul{\r\n    display:flex;\r\n    background:#2b70e8;\r\n    > li {\r\n      width: 50%;\r\n      text-align:center;\r\n      padding: 16px 0;\r\n      position:relative;\r\n      &.selected::after{\r\n        content: '';\r\n        display:block;\r\n        height: 5px;\r\n        background:#1d4b9b;\r\n        position:absolute;\r\n        bottom:0;\r\n        width: 100%;\r\n        left: 0;\r\n      }\r\n    }\r\n  }\r\n`\r\n// 定义类型\r\ntype Props = {\r\n    value: '-' | '+',\r\n    onChange: (value:'-'|'+') => void\r\n}\r\nconst CategorySection:React.FunctionComponent<Props> = (props)=>{\r\n    // 为表驱动做准备\r\n    const categoryMap = {'-':'支出','+':'收入'}\r\n    // 定义一个叫做category的类型，是按照categoryMap来的\r\n    type category = typeof categoryMap\r\n    // 定义一个叫做keys的变量，获取category的键，保存为联合类型\r\n    type keys = keyof category\r\n    const [categoryList] = React.useState<keys[]>(['-','+'])\r\n    // const [category,setCategory] = React.useState('-')\r\n    const category = props.value\r\n    return(\r\n        <Wrapper>\r\n            <ul>\r\n                {categoryList.map((cate)=>{\r\n                    return (\r\n                        <li className={category===cate ? 'selected':''} onClick={()=>{\r\n                            props.onChange(cate)\r\n                        }} key={cate}>{\r\n                            categoryMap[cate]\r\n                        }\r\n                        </li>\r\n                    )\r\n                    })}\r\n            </ul>\r\n        </Wrapper>\r\n    )\r\n}\r\nexport {CategorySection}","import styled from 'styled-components'\r\nconst Wrapper = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  > .output {\r\n    background: white;\r\n    font-size: 36px;\r\n    line-height: 72px;\r\n    text-align: right;\r\n    padding: 0 16px;\r\n    box-shadow: inset 0 -5px 5px -5px rgba(0, 0, 0, 0.25),\r\n    inset 0 5px 5px -5px rgba(0, 0, 0, 0.25);\r\n  }\r\n\r\n  > .pad {\r\n    > button {\r\n      font-size: 18px;\r\n      float: left;\r\n      width: 25%;\r\n      height: 64px;\r\n      border: none;\r\n      background: #1d4b9b;\r\n      -webkit-touch-callout:none; /*系统默认菜单被禁用*/\r\n      -webkit-user-select:none; /*webkit浏览器*/\r\n      -khtml-user-select:none; /*早期浏览器*/\r\n      -moz-user-select:none;/*火狐*/\r\n      -ms-user-select:none; /*IE10*/\r\n      user-select:none;\r\n      &:hover {\r\n        cursor: pointer;\r\n        background: #566df8;\r\n      }\r\n\r\n      &.ok {\r\n        height: 128px;\r\n        float: right;\r\n      }\r\n\r\n      &.zero {\r\n        width: 50%;\r\n      }\r\n\r\n      &:nth-child(1) {\r\n        //background: #f2f2f2;\r\n        filter: brightness(290%);\r\n      }\r\n\r\n      &:nth-child(2),\r\n      &:nth-child(5) {\r\n        //background: #E0E0E0;\r\n        filter: brightness(240%);\r\n      }\r\n\r\n      &:nth-child(3),\r\n      &:nth-child(6),\r\n      &:nth-child(9) {\r\n        //background: #D3D3D3;\r\n        filter: brightness(210%);\r\n      }\r\n\r\n      &:nth-child(4),\r\n      &:nth-child(7),\r\n      &:nth-child(10) {\r\n        //background: #C1C1C1;\r\n        filter: brightness(180%);\r\n      }\r\n\r\n      &:nth-child(8),\r\n      &:nth-child(11),\r\n      &:nth-child(13) {\r\n        //background: #B8B8B8;\r\n        filter: brightness(150%);\r\n      }\r\n\r\n      // ok\r\n      &:nth-child(12) {\r\n        //background: #9A9A9A;\r\n      }\r\n\r\n      // 点\r\n      &:nth-child(14) {\r\n        //background: #A9A9A9;\r\n        filter: brightness(130%);\r\n      }\r\n    }\r\n  }\r\n`\r\nexport {Wrapper}","import React from \"react\";\r\nimport {Wrapper} from './NumberPadSection/Wrapper'\r\nimport {generateOutput} from './NumberPadSection/generateOutput'\r\n\r\ntype Props = {\r\n    value: number,\r\n    onChange: (amount: number)=> void;\r\n    // 可以为空的onOk\r\n    onOK?:() =>void;\r\n}\r\n\r\nconst NumberPadSection: React.FunctionComponent<Props> = (props) => {\r\n    const [padStr,setPadStr] = React.useState<string>('')\r\n    // const memoizedPadGenerator = React.useCallback(() => {\r\n    //      padGenerator()\r\n    // },[])\r\n    // 随机给键盘生成的函数\r\n    React.useEffect(()=>{\r\n        // 生成数字键一共十个\r\n        const padGenerator = () => {\r\n            let countStr = ''\r\n            const result:string[] = []\r\n            for(let i = 0; i< 10;i++){\r\n                let randomNum = String(Math.floor((Math.random()*10)))\r\n                if(i === 0){\r\n                    result.push(randomNum)\r\n                }else{\r\n                    while(result.indexOf(randomNum) > -1){\r\n                        randomNum = String(Math.floor((Math.random()*10)))\r\n                    }\r\n                    result.push(randomNum)\r\n                }\r\n            }\r\n            // 插入删除、清空、OK等\r\n            result.splice(3,0,'删除')\r\n            result.splice(7,0,'清空')\r\n            result.splice(11,0,'<button className=\"ok\" style=\"height: 128px;float: right;\">OK</button>')\r\n            const zeroPosition = result.splice(12,1)\r\n            result.splice(12,0,`<button className=\"zero\" style=\"width:50%\">${zeroPosition}</button>`)\r\n            result.push(`<button className=\"dot\">.</button>`)\r\n            // 长度小于3的都用普通button标签\r\n            result.forEach((ele,index,group) =>{\r\n                if(ele.length <3){\r\n                    group[index] = `<button>${ele}</button>`\r\n                }\r\n                countStr = countStr + group[index]\r\n            })\r\n            setPadStr(countStr)\r\n        }\r\n        padGenerator()\r\n    },[])\r\n    // const [output, setOutput] = useState('0')\r\n    const output = props.value\r\n    // 给默认事件定义类型为React的鼠标事件\r\n    const onClickButtonWrapper = (e: React.MouseEvent) => {\r\n        // as在typescript是强制指定类型的意思\r\n        const currentButton = (e.target as HTMLButtonElement).textContent as string\r\n        if('.0123456789删除清空'.indexOf(currentButton)>-1){\r\n            const amount = generateOutput(currentButton, output)\r\n            props.onChange(amount)\r\n        }else if (currentButton === 'OK'){\r\n        //    OK暂且功能为空\r\n            props.onOK?.()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <div className=\"output\">\r\n                {output}\r\n            </div>\r\n            {/*dangerouslySetInnerHTML={{__html: padStr}}*/}\r\n            <div className=\"pad clearfix\" dangerouslySetInnerHTML={{__html: padStr}} onClick={(e) => {\r\n                onClickButtonWrapper(e)\r\n            }}>\r\n            </div>\r\n        </Wrapper>\r\n    )\r\n}\r\nexport {NumberPadSection}","const generateOutput = (text: string, output=0)=>{\r\n    const numPad = '0123456789'\r\n    let key: string\r\n    if (numPad.indexOf(text) > -1) {\r\n        key = 'num'\r\n    } else {\r\n        key = text\r\n    }\r\n    const stringOutput = String(output)\r\n    const dotIndex = stringOutput.indexOf('.')\r\n    const floatLimit = stringOutput.slice(dotIndex).length < 3\r\n    const lengthLimit = stringOutput.slice(0, dotIndex).length\r\n\r\n    //用表驱动优化逻辑\r\n    // 加上类型约束\r\n    const numMap: { [key: string]: Function } = {\r\n        '.': () => {\r\n            if (dotIndex > -1 && text === '.') {\r\n                return stringOutput\r\n            } else if (floatLimit) {\r\n                return (stringOutput + text)\r\n            } else{\r\n                return stringOutput\r\n            }\r\n        },\r\n        // 如果是键盘值\r\n        'num': () => {\r\n            // 如果是初值\r\n            if (stringOutput === '0') {\r\n                return (text)\r\n            } else if (floatLimit && lengthLimit < 9) {\r\n                return(stringOutput + text)\r\n            } else{\r\n                return (stringOutput)\r\n            }\r\n        },\r\n        '删除': () => {\r\n            if (stringOutput.length === 1) {\r\n                return('0')\r\n            } else {\r\n                return(stringOutput.slice(0, stringOutput.length - 1))\r\n            }\r\n        },\r\n        '清空': () => {\r\n            return('0')\r\n        },\r\n    }\r\n    return numMap[key]()\r\n}\r\nexport {generateOutput}","import {useEffect, useState} from 'react';\r\nimport {useUpdate} from './useUpdate';\r\n\r\nexport type RecordItem = {\r\n    tagIds: number[]\r\n    note: string\r\n    category: '+' | '-'\r\n    amount: number\r\n    // 以世界时间格式\r\n    createAt: string // ISO 8601\r\n}\r\n// Omit是忽略，忽略RecordItem类型的，createAt属性，在此用来提升所定义类型的复用性\r\ntype newRecordItem = Omit<RecordItem, 'createAt'>\r\n\r\nexport const useRecords = () => {\r\n    // 定义读写记录的useState\r\n    const [records, setRecords] = useState<RecordItem[]>([]);\r\n    useEffect(() => {\r\n        // 一开始获取记录\r\n        setRecords(JSON.parse(window.localStorage.getItem('records')||'[]'))\r\n    },[])\r\n    useUpdate(() => {\r\n        window.localStorage.setItem('records', JSON.stringify(records))\r\n    },[records])\r\n    const addRecord = (newRecord: newRecordItem) => {\r\n        if(newRecord.amount <= 0){\r\n            alert('请输入金额')\r\n            return false\r\n        }\r\n        if(newRecord.tagIds.length === 0){\r\n            alert('请选择标签')\r\n            return false;\r\n        }\r\n        // 转为国际时间格式的字符串\r\n        const record = {...newRecord, createAt: (new Date()).toISOString()}\r\n        // 把records和record合并，变成新的数组更新\r\n        setRecords(()=>{\r\n            return [...records, record]\r\n        })\r\n        return true;\r\n    }\r\n    return {records, addRecord}\r\n}","import Layout from '../components/Layout';\r\nimport React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nimport {TagsSection} from './Money/TagsSection';\r\nimport {NotesSection} from './Money/NotesSection'\r\nimport {CategorySection} from './Money/CategorySection'\r\nimport {NumberPadSection} from './Money/NumberPadSection'\r\n\r\nimport {useRecords} from '../hooks/useRecords'\r\n\r\n// 把组件当标签塞入\r\nconst MyLayout = styled(Layout)`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n//定义类型category 为 仅包含 -和+\r\ntype Category = '-' | '+'\r\n// 定义默认值\r\nconst defaultFormData = {\r\n    tagIds: [] as number[],\r\n    note: '',\r\n    category: '-' as Category,\r\n    amount: 0\r\n}\r\nconst CategoryWrapper = styled.div`\r\n      background: #c4c4c4;\r\n`;\r\n\r\nfunction Money() {\r\n    const [selected, setSelected] = React.useState(defaultFormData)\r\n    const {addRecord} = useRecords()\r\n    //Partial是代表类型中的一种\r\n    const onChange = (obj: Partial<typeof selected>) => {\r\n        setSelected({...selected, ...obj})\r\n    }\r\n    const submit = () => {\r\n        if (addRecord(selected)) {\r\n            alert('保存成功')\r\n            setSelected(defaultFormData)\r\n        }\r\n\r\n    }\r\n    return (\r\n        <MyLayout>\r\n            {/*标签块*/}\r\n            <TagsSection\r\n                value={selected.tagIds}\r\n                onChange={(tagIds) => {\r\n                    return onChange({tagIds})\r\n                }}>\r\n            </TagsSection>\r\n            {/*备注块*/}\r\n            <NotesSection\r\n                value={selected.note}\r\n                onChange={(note) => {\r\n                    return onChange({note})\r\n                }}\r\n            />\r\n            <CategoryWrapper>\r\n                {/*收入支出选项卡*/}\r\n                <CategorySection\r\n                    value={selected.category}\r\n                    onChange={\r\n                        (category) => {\r\n                            return onChange({category})\r\n                        }\r\n                    }\r\n                />\r\n            </CategoryWrapper>\r\n            {/*键盘块*/}\r\n            <NumberPadSection\r\n                value={selected.amount}\r\n                onChange={\r\n                    (amount) => {\r\n                        return onChange({amount})\r\n                    }\r\n                }\r\n                // 子组件触发ok事件\r\n                onOK={submit}\r\n            />\r\n        </MyLayout>\r\n    );\r\n}\r\n\r\nexport default Money;\r\n","import Layout from '../components/Layout';\r\nimport React from 'react';\r\nimport {CategorySection} from './Money/CategorySection';\r\nimport styled from 'styled-components'\r\nimport {RecordItem,useRecords} from '../hooks/useRecords'\r\nimport {useTags} from '../hooks/useTags'\r\nimport day from 'dayjs'\r\n\r\nconst CategoryWrapper = styled.div`\r\n  background: white;\r\n`\r\nconst Item = styled.div`\r\n  display:flex;\r\n  justify-content: space-between;\r\n  background: white;\r\n  font-size: 18px;\r\n  line-height: 20px;\r\n  padding: 10px 16px;\r\n  border-bottom: 1px solid #e9f0ff;\r\n  > .note{\r\n    margin-right: auto;\r\n    margin-left: 16px;\r\n    color: #999;\r\n  }\r\n`;\r\nconst Header = styled.h3`\r\n  font-size: 18px;\r\n  line-height: 20px;\r\n  padding: 10px 16px;\r\n`\r\nfunction Statistics() {\r\n    const [category, setCategory] = React.useState<'-'|'+'>('-')\r\n    const {records} = useRecords();\r\n    const {getName} = useTags();\r\n    // 筛选出收入和支出\r\n    const selectedRecords = records.filter((r) => {\r\n        return r.category === category\r\n    })\r\n    // {'2023-06-01': [item, item], '2023-05-31': [item, item], '2023-05-29': [item, item, item, item]}\r\n    // 约束类型key为string,value为RecordItem的值\r\n    const hash: {[K: string]: RecordItem[]} = {}\r\n    selectedRecords.forEach((r) => {\r\n        const key = day(r.createAt).format('YYYY年MM月DD日')\r\n        if(!(key in hash)){\r\n            hash[key] = []\r\n        }\r\n        hash[key].push(r);\r\n    })\r\n    // 按照字典排序\r\n    const array = Object.entries(hash).sort(\r\n        (a,b) =>{\r\n            if(a[0] === b[0]) return 0;\r\n            if(a[0] > b[0]) return -1;\r\n            if(a[0] < b[0]) return 1;\r\n            return 0\r\n        }\r\n        )\r\n  return (\r\n    <Layout>\r\n        <CategoryWrapper>\r\n            <CategorySection value={category} onChange={\r\n                (value) => {\r\n                    return setCategory(value)\r\n                }\r\n            }/>\r\n        </CategoryWrapper>\r\n        {\r\n            array.map(([date,records]) => {\r\n                return (\r\n                    <div key={date}>\r\n                        <Header>\r\n                            {date}\r\n                        </Header>\r\n                        <div>\r\n                            {records.map((r,index) => {\r\n                                return <Item key={r.createAt}>\r\n                                    <div className='tags oneLine'>\r\n                                        {\r\n                                            r.tagIds.map((tagId) => {\r\n                                                return (\r\n                                                    <span key={tagId}>\r\n                                                        {getName(tagId)}\r\n                                                    </span>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                    {r.note && <div className='note'>\r\n                                        {r.note}\r\n                                    </div> }\r\n                                    <div className=\"amount\">\r\n                                        ￥{r.amount}\r\n                                    </div>\r\n                                </Item>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n    </Layout>\r\n  );\r\n}\r\n\r\n\r\nexport default Statistics;\r\n","import styled from 'styled-components'\r\n\r\nconst Button = styled.button`\r\n  font-size: 18px; border: none; padding: 8px 12px;\r\n  background: #54d9ff; border-radius: 4px;\r\n  color: white;\r\n`\r\nexport {Button}","import styled from \"styled-components\";\r\n\r\nconst Center = styled.div`\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      flex-direction: column;\r\n    `;\r\nexport {Center}","import styled from \"styled-components\";\r\n\r\nconst Space = styled.div`\r\n      height: 16px;\r\n    `\r\nexport {Space}","import Layout from '../components/Layout';\r\nimport React from 'react';\r\nimport {useTags} from \"../hooks/useTags\";\r\nimport styled from 'styled-components';\r\nimport Icon from '../components/Icon';\r\nimport {Link} from 'react-router-dom'\r\nimport {Button} from 'components/Button'\r\nimport {Center} from 'components/Center'\r\nimport {Space} from 'components/Space'\r\n\r\nfunction Tags() {\r\n    const {tags, addTag} = useTags()\r\n    const TagList = styled.ol`\r\n      font-size: 16px;\r\n      background: white;\r\n\r\n      > li {\r\n        //#e5e5e7\r\n        &:hover {\r\n          background: #e3f3fd;\r\n        }\r\n\r\n        border-bottom: 1px solid #e9f0ff;\r\n        line-height: 20px;\r\n        padding: 12px 16px 12px 16px;\r\n        > a {\r\n          padding: 12px 16px 12px 0;\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n        }\r\n      }\r\n    `;\r\n\r\n\r\n    return (\r\n        <Layout>\r\n            <TagList>\r\n                {tags.map(tag =>\r\n                    <li key={tag.id}>\r\n                        {/*路由跳转*/}\r\n                        <Link to={'/tags/'+ tag.id}>\r\n                            <span className=\"oneLine\">{tag.name}</span>\r\n                            <Icon name=\"right\"/>\r\n                        </Link>\r\n                    </li>\r\n                )}\r\n            </TagList>\r\n            <Center>\r\n                <Space/>\r\n                <Space/>\r\n                <Space/>\r\n                <Button onClick={addTag}>新增标签</Button>\r\n            </Center>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Tags;\r\n","import React from 'react';\r\nimport {useTags} from '../hooks/useTags'\r\nimport {useParams, useHistory} from 'react-router-dom'\r\nimport Layout from \"../components/Layout\";\r\nimport Icon from 'components/Icon'\r\nimport {Button} from 'components/Button'\r\nimport styled from 'styled-components'\r\nimport {Input} from '../components/Input'\r\nimport {Center} from '../components/Center'\r\nimport {Space} from '../components/Space'\r\ntype Params = {\r\n    id: string\r\n}\r\nconst Topbar = styled.header`\r\n  display:flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  line-height: 20px;\r\n  padding: 14px;\r\n  background:white;\r\n`;\r\nconst InputWrapper = styled.div`\r\n  background:white;\r\n  padding: 0 16px;\r\n  margin-top: 8px;\r\n`;\r\nconst Tag: React.FunctionComponent = (props) => {\r\n    const {findTag,updateTag, deleteTag} = useTags();\r\n    // 可以以对象形式获取路由的参数,定义idString为useParams的id\r\n    let {id: idString} = useParams<Params>()\r\n    const tag = findTag(parseInt(idString))\r\n    const tagContent = (tag: {id:number; name: string}) =>(\r\n        <div>\r\n            <InputWrapper>\r\n                <Input label=\"标签名\" type=\"text\" placeholder=\"标签名\"\r\n                       value={tag.name}\r\n                       onChange={(e) => {\r\n                           updateTag(tag.id, {name: e.target.value});\r\n                       }}\r\n                />\r\n            </InputWrapper>\r\n            <Center>\r\n                <Space/>\r\n                <Space/>\r\n                <Space/>\r\n                <Button onClick={() => {\r\n                    deleteTag(tag.id);\r\n                }}>删除标签</Button>\r\n            </Center>\r\n        </div>\r\n    );\r\n    const history = useHistory()\r\n    const onClickBack = () =>{\r\n        history.goBack()\r\n    }\r\n    return (\r\n        <Layout>\r\n            <Topbar>\r\n                <Icon name=\"left\" onClick={()=>{onClickBack()}}/>\r\n                <span>编辑标签</span>\r\n                <Icon/>\r\n            </Topbar>\r\n            {tag ? tagContent(tag): <Center>tag 不存在</Center>}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Tag;","import React from 'react';\r\nimport styled from 'styled-components'\r\nconst Wrapper = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\nfunction NoMatch() {\r\n  return (\r\n      <Wrapper>\r\n        <h1>你输入的是什么网址啊，没有哦</h1>\r\n      </Wrapper>\r\n  );\r\n}\r\n\r\nexport default NoMatch;\r\n","import React from 'react';\r\nimport {\r\n  // 以哈希方式路由跳转，另一种方式需要服务器支持\r\n  HashRouter as Router,\r\n  //被switch包裹的route只匹配第一个值,不然的话，每个与当前路径匹配的<Route>都会被绘制\r\n  Switch,\r\n  //  匹配到对应路由，就显示\r\n  Route,\r\n  //  重定向路由\r\n  Redirect} from 'react-router-dom';\r\nimport Money from './views/Money';\r\nimport Statistics from './views/Statistics';\r\nimport Tags from './views/Tags';\r\nimport Tag from './views/Tag'\r\nimport NoMatch from './views/NoMatch';\r\nimport styled from 'styled-components'\r\nconst AppWrapper = styled.div`\r\n  color: #333;\r\n  max-width: 500px;\r\n  margin: 0 auto;\r\n`\r\n\r\nfunction App() {\r\n  // @ts-ignore\r\n  document.querySelector('meta[name=\"viewport\"]').setAttribute('content','width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0')\r\n  return (\r\n    <AppWrapper>\r\n      <Router>\r\n        <Switch>\r\n          {/*exact精确匹配*/}\r\n          <Route exact path=\"/tags\">\r\n            <Tags/>\r\n          </Route>\r\n          {/*表示匹配之后非斜杠的内容*/}\r\n          <Route exact path=\"/tags/:id\">\r\n            <Tag/>\r\n          </Route>\r\n          <Route exact path=\"/money\">\r\n            <Money/>\r\n          </Route>\r\n          <Route exact path=\"/statistics\">\r\n            <Statistics/>\r\n          </Route>\r\n          {/*如果是主页重定向到/money*/}\r\n          <Redirect exact from=\"/\" to=\"/money\"/>\r\n          <Route path=\"*\">\r\n            <NoMatch/>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </AppWrapper>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'index.scss';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  //  取消严格模式，防止触发多次生命周期\r\n  // <React.StrictMode>\r\n    <App />,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}